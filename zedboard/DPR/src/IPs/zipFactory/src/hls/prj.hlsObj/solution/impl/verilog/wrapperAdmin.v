// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="wrapperAdmin,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.437000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=243,HLS_SYN_LUT=668}" *)

module wrapperAdmin (
        din_V_dout,
        din_V_empty_n,
        din_V_read,
        dout_V_din,
        dout_V_full_n,
        dout_V_write,
        pr_V_addr_din,
        pr_V_addr_full_n,
        pr_V_addr_write,
        pr_V_areaID_din,
        pr_V_areaID_full_n,
        pr_V_areaID_write,
        prDone_V_dout,
        prDone_V_empty_n,
        prDone_V_read,
        ap_clk,
        ap_rst
);


input  [31:0] din_V_dout;
input   din_V_empty_n;
output   din_V_read;
output  [31:0] dout_V_din;
input   dout_V_full_n;
output   dout_V_write;
output  [31:0] pr_V_addr_din;
input   pr_V_addr_full_n;
output   pr_V_addr_write;
output  [15:0] pr_V_areaID_din;
input   pr_V_areaID_full_n;
output   pr_V_areaID_write;
input   prDone_V_dout;
input   prDone_V_empty_n;
output   prDone_V_read;
input   ap_clk;
input   ap_rst;

reg    Block_proc11_U0_ap_start;
wire    Block_proc11_U0_ap_done;
wire    Block_proc11_U0_ap_continue;
wire    Block_proc11_U0_ap_idle;
wire    Block_proc11_U0_ap_ready;
wire    Block_proc11_U0_din_V_read;
wire   [31:0] Block_proc11_U0_dout_V_din;
wire    Block_proc11_U0_dout_V_write;
wire    Block_proc11_U0_prDone_V_read;
wire   [31:0] Block_proc11_U0_pr_V_addr_din;
wire    Block_proc11_U0_pr_V_addr_write;
wire   [15:0] Block_proc11_U0_pr_V_areaID_din;
wire    Block_proc11_U0_pr_V_areaID_write;
wire    ap_sync_continue;
wire    Block_proc11_U0_start_full_n;
wire    Block_proc11_U0_start_write;

// power-on initialization
initial begin
#0 Block_proc11_U0_ap_start = 1'b0;
end

Block_proc11 Block_proc11_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Block_proc11_U0_ap_start),
    .ap_done(Block_proc11_U0_ap_done),
    .ap_continue(Block_proc11_U0_ap_continue),
    .ap_idle(Block_proc11_U0_ap_idle),
    .ap_ready(Block_proc11_U0_ap_ready),
    .din_V_dout(din_V_dout),
    .din_V_empty_n(din_V_empty_n),
    .din_V_read(Block_proc11_U0_din_V_read),
    .dout_V_din(Block_proc11_U0_dout_V_din),
    .dout_V_full_n(dout_V_full_n),
    .dout_V_write(Block_proc11_U0_dout_V_write),
    .prDone_V_dout(prDone_V_dout),
    .prDone_V_empty_n(prDone_V_empty_n),
    .prDone_V_read(Block_proc11_U0_prDone_V_read),
    .pr_V_addr_din(Block_proc11_U0_pr_V_addr_din),
    .pr_V_addr_full_n(pr_V_addr_full_n),
    .pr_V_addr_write(Block_proc11_U0_pr_V_addr_write),
    .pr_V_areaID_din(Block_proc11_U0_pr_V_areaID_din),
    .pr_V_areaID_full_n(pr_V_areaID_full_n),
    .pr_V_areaID_write(Block_proc11_U0_pr_V_areaID_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        Block_proc11_U0_ap_start <= 1'b0;
    end else begin
        Block_proc11_U0_ap_start <= 1'b1;
    end
end

assign Block_proc11_U0_ap_continue = 1'b1;

assign Block_proc11_U0_start_full_n = 1'b1;

assign Block_proc11_U0_start_write = 1'b0;

assign ap_sync_continue = 1'b0;

assign din_V_read = Block_proc11_U0_din_V_read;

assign dout_V_din = Block_proc11_U0_dout_V_din;

assign dout_V_write = Block_proc11_U0_dout_V_write;

assign prDone_V_read = Block_proc11_U0_prDone_V_read;

assign pr_V_addr_din = Block_proc11_U0_pr_V_addr_din;

assign pr_V_addr_write = Block_proc11_U0_pr_V_addr_write;

assign pr_V_areaID_din = Block_proc11_U0_pr_V_areaID_din;

assign pr_V_areaID_write = Block_proc11_U0_pr_V_areaID_write;

endmodule //wrapperAdmin
